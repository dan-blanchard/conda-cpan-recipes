package:
  name: perl-log-dispatchouli
  version: !!str 2.009

source:
  fn: Log-Dispatchouli-2.009.tar.gz
  url: http://cpan.metacpan.org/authors/id/R/RJ/RJBS/Log-Dispatchouli-2.009.tar.gz
  md5: b219b6e14ae756583097afee3445ef20
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you're using a build string instead of a number, this is the
  # final numeric portion of the string.
  #
  # If you do not include a build number or string, the build number and string
  # default to 0.
  #
  # NOTE: Build strings override build numbers.
  number: 1

requirements:
  build:
    - perl
    - perl-pathtools
    - perl-extutils-makemaker
    - perl-params-util
    - perl-sub-exporter-globexporter
    - perl-scalar-list-utils
    - perl-test-deep
    - perl-sys-syslog
    - perl-string-flogger
    - perl-base
    - perl-carp
    - perl-sub-exporter
    - perl-test-fatal
    - perl-try-tiny
    - perl-lib
    - perl-log-dispatch-array
    - perl-file-temp
    - perl-log-dispatch
    - perl-test-simple

  run:
    - perl
    - perl-pathtools
    - perl-sub-exporter-globexporter
    - perl-sys-syslog
    - perl-string-flogger
    - perl-carp
    - perl-sub-exporter
    - perl-try-tiny
    - perl-log-dispatch-array
    - perl-params-util
    - perl-log-dispatch
    - perl-scalar-list-utils

test:
  # Perl 'use' tests
  imports:
    - Log::Dispatchouli
    - Log::Dispatchouli::Global
    - Log::Dispatchouli::Proxy

  # You can also put a file called run_test.pl (or run_test.py) in the recipe
  # that will be run at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/rjbs/Log-Dispatchouli
  license: perl_5
  summary: 'a simple wrapper around Log::Dispatch'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
